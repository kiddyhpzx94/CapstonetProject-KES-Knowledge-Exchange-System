{"version":3,"sources":["karma-test-shim.js"],"names":[],"mappings":";;;AACA,MAAM,eAAN,GAAwB,QAAxB;;AAGA,QAAQ,wBAAR,GAAmC,IAAnC;;;;AAIA,UAAU,MAAV,GAAmB,YAAW,CAAE,CAAhC;;AAGA,OAAO,MAAP,CAAc;AACZ,YAAU;AACR,uBAAmB;AACjB,wBAAkB,KADD;AAEjB,cAAQ,UAFS;AAGjB,WAAK,OAAO,IAAP,CAAY,OAAO,SAAP,CAAiB,KAA7B,EACC,MADD,CACQ,YADR,EAEC,MAFD,CAEQ,SAAS,iBAAT,CAA2B,YAA3B,EAAyC,OAAzC,EAAkD;;;AAGvD,YAAI,aAAa,QAAQ,OAAR,CAAgB,wBAAhB,EAA0C,IAA1C,EAAgD,OAAhD,CAAwD,OAAxD,EAAiE,EAAjE,CAAjB;AACA,qBAAa,UAAb,IAA2B,UAAU,GAAV,GAAgB,OAAO,SAAP,CAAiB,KAAjB,CAAuB,OAAvB,CAA3C;AACA,eAAO,YAAP;AACD,OARF,EAQI,EARJ;;AAHY;AADX;AADE,CAAd;;AAmBA,OAAO,MAAP,CAAc,kBAAd,EAAkC,IAAlC,CAAuC,UAAS,OAAT,EAAkB;AACvD,SAAO,OAAO,MAAP,CAAc,mCAAd,EAAmD,IAAnD,CAAwD,UAAS,SAAT,EAAoB;AACjF,YAAQ,oBAAR,CAA6B,UAAU,+BAAvC,EAC6B,UAAU,kCADvC;AAED,GAHM,CAAP;AAID,CALD,EAKG,IALH,CAKQ,YAAW;AACjB,SAAO,QAAQ,GAAR,CACL,OAAO,IAAP,CAAY,OAAO,SAAP,CAAiB,KAA7B,C;AAAA,GACC,MADD,CACQ,aADR;;AAAA,GAGC,GAHD,CAGK,UAAS,UAAT,EAAqB;;AAExB,WAAO,OAAO,MAAP,CAAc,UAAd,CAAP;AACD,GAND,CADK,CAAP;AAQD,CAdD,EAeC,IAfD,CAeM,YAAW;AACf,YAAU,KAAV;AACD,CAjBD,EAiBG,UAAS,KAAT,EAAgB;AACjB,YAAU,KAAV,CAAgB,MAAM,KAAN,IAAe,KAA/B;AACD,CAnBD;;AAsBA,SAAS,mBAAT,CAA6B,QAA7B,EAAuC;AACrC,SAAO,SACE,OADF,CACU,KADV,EACiB,EADjB,E;AAEE,SAFF,CAEU,QAFV,EAEoB,EAFpB,CAAP,C;AAGD;;AAGD,SAAS,YAAT,CAAsB,QAAtB,EAAgC;AAC9B,SAAO,iCAAgC,IAAhC,CAAqC,QAArC;AAAP;AACD;;AAGD,SAAS,aAAT,CAAuB,IAAvB,EAA6B;AAC3B,SAAO,cAAa,IAAb,CAAkB,IAAlB;AAAP;AACD","file":"karma-test-shim-compiled.js","sourcesContent":["// Tun on full stack traces in errors to help debugging\nError.stackTraceLimit = Infinity;\n\n\njasmine.DEFAULT_TIMEOUT_INTERVAL = 1000;\n\n// // Cancel Karma's synchronous start,\n// // we will call `__karma__.start()` later, once all the specs are loaded.\n__karma__.loaded = function() {};\n\n\nSystem.config({\n  packages: {\n    'base/client/dev': {\n      defaultExtension: false,\n      format: 'register',\n      map: Object.keys(window.__karma__.files).\n            filter(onlyAppFiles).\n            reduce(function createPathRecords(pathsMapping, appPath) {\n              // creates local module name mapping to global path with karma's fingerprint in path, e.g.:\n              // './hero.service': '/base/src/app/hero.service.script?f4523daf879cfb7310ef6242682ccf10b2041b3e'\n              var moduleName = appPath.replace(/^\\/base\\/client\\/dev\\//, './').replace(/\\.js$/, '');\n              pathsMapping[moduleName] = appPath + '?' + window.__karma__.files[appPath]\n              return pathsMapping;\n            }, {})\n\n      }\n    }\n});\n\nSystem.import('angular2/testing').then(function(testing) {\n  return System.import('angular2/platform/testing/browser').then(function(providers) {\n    testing.setBaseTestProviders(providers.TEST_BROWSER_PLATFORM_PROVIDERS,\n                                 providers.TEST_BROWSER_APPLICATION_PROVIDERS);\n  });\n}).then(function() {\n  return Promise.all(\n    Object.keys(window.__karma__.files) // All files served by Karma.\n    .filter(onlySpecFiles)\n    // .map(filePath2moduleName)        // Normalize paths to module names.\n    .map(function(moduleName) {\n      // loads all spec files via their global module names (e.g. 'base/src/app/hero.service.spec')\n      return System.import(moduleName);\n    }));\n})\n.then(function() {\n  __karma__.start();\n}, function(error) {\n  __karma__.error(error.stack || error);\n});\n\n\nfunction filePath2moduleName(filePath) {\n  return filePath.\n           replace(/^\\//, '').              // remove / prefix\n           replace(/\\.\\w+$/, '');           // remove suffix\n}\n\n\nfunction onlyAppFiles(filePath) {\n  return /^\\/base\\/client\\/dev\\/.*\\.js$/.test(filePath)\n}\n\n\nfunction onlySpecFiles(path) {\n  return /_test\\.js$/.test(path);\n}\n"]}